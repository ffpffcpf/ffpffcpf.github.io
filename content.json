{"pages":[],"posts":[{"title":"什么是Java虚拟机","text":"小明生活在大山中的某个村子，村子盛产芒果，人们日日以芒果为食。有一天村里来了个芒果加工厂老板，看着一片片芒果林开心得活蹦乱跳，村民看着老板大喊大叫，奈何听不懂他说的是啥。小明看着老板失心疯的样子，害怕老板会拿起刀子砍人，马上叫来村口上过大学年轻力壮的小胡。 小明说：“小胡小胡，快来看看这个人怎么回事，他在拿了个啥，是不是疯了，快帮忙找个家伙把他绑起来吧。” 小胡说：“我夜观天象就知道今天会有不怕死的上门找茬，待我前去抓拿那妖孽。” 小胡抄起家伙准备给老板来一下的时候，老板大吼：“No~~~~” “nani”,小胡大吃一惊原来老板说的是英文，马上放下手里的家伙，安抚老板。 原来老板来自遥远的他乡，是当地最大的芒果加工厂老板，因为气候变化，芒果不断减产，再找不到芒果就要倒闭了，于是四处奔波寻找芒果。老板和小胡沟通后，开开心心买了很多芒果回去。 老板走后，小胡心想，如果后面老板再来买芒果自己不在村里怎么办。于是写了一本小册子，上面写着zero = 0, one = 1,two = 2….一些常用的英文翻译，这样下次老板来，大家就可以用这本册子沟通了。 过了一段时间，老板介绍来另外一个老板B来村子采购，结果老板B只会讲德语。还好机智的小胡也懂，于是掏出另一本小册子写上 Null = 0， einer = 1, zwei= 2….. \b上面故事中0、1、2….这些通用编号就和java语言一样，小册子就是虚拟机。因为世上机器系统多样化有windows、有mac OS、有liunx等等这么多老板，要和他们沟通就要有虚拟机这个小册子，把我们的通用语言翻译给机器老板听，他们才能乖乖听我们开发程序员的命令不辞劳苦地工作。","link":"/2020/12/30/%E4%BB%80%E4%B9%88%E6%98%AFJava%E8%99%9A%E6%8B%9F%E6%9C%BA/"},{"title":"怎么又死锁啦","text":"相信很多小伙伴，听程序员喊过死锁啦，那么让他们抓耳挠腮的死锁是什么东西咧。首先什么是锁咧，锁的作用是保持一个东西的状态不受其他的东西影响。听到这个解释相信小伙伴肯定还是一脸懵逼…… 举个例子： 小胡在一家公司打杂，平时负责响应大佬的命令，完成分配的任务。一开始小胡很闲，只用完成老胡分配的工作，每天带薪拉屎美滋滋。随着公司业务扩展，大佬开始变多了，小胡也开始忙了起来。有一天大佬老陈让小胡去清点货物数量，当小胡清点到一半时，另一个大佬老赵也过来喊小胡去打印文件。这里我们有两个选择，要不记下当前的计数然后先去帮老赵打印文件，结束后回来接着清点；要不先清点完货物，然后去再去打印文件。这两种做法都可以，但是作为一个职场老鸟，无论你做那个选择有一件重要的事情你都需要做。那就是告诉老赵和老陈你现在在做谁安排的事，这样就不会因为没有提前说明，和两位领导发生冲突。上面小胡就是一个要被保持的东西，就是要被锁的东西，对其他人声明自己在做谁安排的东西，就是一个声明锁的过程——小胡在干谁安排的活。其他人知道小胡在忙，也知道他在忙谁安排的活。而锁的作用就是保持小胡这个小资源专注于做一件事情，不会被其他人强行插入乱了套。 那么什么是死锁咧，简单来说就是一个和两件事情有关的物体，两件事情相互等待对方完成才能完成。有点山路十八弯的感觉～～～～ 举个例子： 比如工作中有些不会画图的产品经理，需要等开发人员做出初稿才能确认产品方向，而开发人员又需要产品经理确认了应该做啥才能做出初稿。这我…..上面这个情况就发生了死锁，初稿就是那个物体，它和两件事情有关——产品经理确认方向和开发人员制作，简单来说就是死循环。程序中的死锁举个数据库相关的例子，例如把年龄10-40岁的用户头像图片地址更新，然后另一个任务把年龄30-60岁用户的操作系统时间重置为当前时间，数据库一条条记录更新是会锁定相应的记录，当两个任务同时操作时，30-40区间的记录会被两个任务同时操作，导致任务一等任务二做完才能拿到他处理中的记录，任务二也在等任务一。","link":"/2021/01/02/%E4%BB%80%E4%B9%88%E6%98%AF%E6%AD%BB%E9%94%81/"}],"tags":[{"name":"编程 知识沉淀 知识分享","slug":"编程-知识沉淀-知识分享","link":"/tags/%E7%BC%96%E7%A8%8B-%E7%9F%A5%E8%AF%86%E6%B2%89%E6%B7%80-%E7%9F%A5%E8%AF%86%E5%88%86%E4%BA%AB/"}],"categories":[]}